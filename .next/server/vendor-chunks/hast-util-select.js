"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/hast-util-select";
exports.ids = ["vendor-chunks/hast-util-select"];
exports.modules = {

/***/ "(ssr)/./node_modules/hast-util-select/lib/attribute.js":
/*!********************************************************!*\
  !*** ./node_modules/hast-util-select/lib/attribute.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attribute: () => (/* binding */ attribute)\n/* harmony export */ });\n/* harmony import */ var comma_separated_tokens__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! comma-separated-tokens */ \"(ssr)/./node_modules/comma-separated-tokens/index.js\");\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devlop */ \"(ssr)/./node_modules/devlop/lib/development.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/lib/find.js\");\n/* harmony import */ var space_separated_tokens__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! space-separated-tokens */ \"(ssr)/./node_modules/space-separated-tokens/index.js\");\n/**\n * @typedef {import('css-selector-parser').AstAttribute} AstAttribute\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n\n\n\n\n\n/**\n * @param {AstAttribute} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {Schema} schema\n *   Schema of element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction attribute(query, element, schema) {\n  const info = (0,property_information__WEBPACK_IMPORTED_MODULE_0__.find)(schema, query.name)\n  const propertyValue = element.properties[info.property]\n  let value = normalizeValue(propertyValue, info)\n\n  // Exists.\n  if (!query.value) {\n    return value !== undefined\n  }\n\n  (0,devlop__WEBPACK_IMPORTED_MODULE_1__.ok)(query.value.type === 'String', 'expected plain string')\n  let key = query.value.value\n\n  // Case-sensitivity.\n  if (query.caseSensitivityModifier === 'i') {\n    key = key.toLowerCase()\n\n    if (value) {\n      value = value.toLowerCase()\n    }\n  }\n\n  if (value !== undefined) {\n    switch (query.operator) {\n      // Exact.\n      case '=': {\n        return key === value\n      }\n\n      // Ends.\n      case '$=': {\n        return key === value.slice(-key.length)\n      }\n\n      // Contains.\n      case '*=': {\n        return value.includes(key)\n      }\n\n      // Begins.\n      case '^=': {\n        return key === value.slice(0, key.length)\n      }\n\n      // Exact or prefix.\n      case '|=': {\n        return (\n          key === value ||\n          (key === value.slice(0, key.length) &&\n            value.charAt(key.length) === '-')\n        )\n      }\n\n      // Space-separated list.\n      case '~=': {\n        return (\n          // For all other values (including comma-separated lists), return whether this\n          // is an exact match.\n          key === value ||\n          // If this is a space-separated list, and the query is contained in it, return\n          // true.\n          space_separated_tokens__WEBPACK_IMPORTED_MODULE_2__.parse(value).includes(key)\n        )\n      }\n      // Other values are not yet supported by CSS.\n      // No default\n    }\n  }\n\n  return false\n}\n\n/**\n *\n * @param {Properties[keyof Properties]} value\n * @param {Info} info\n * @returns {string | undefined}\n */\nfunction normalizeValue(value, info) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'boolean') {\n    if (value) {\n      return info.attribute\n    }\n  } else if (Array.isArray(value)) {\n    if (value.length > 0) {\n      return (info.commaSeparated ? comma_separated_tokens__WEBPACK_IMPORTED_MODULE_3__.stringify : space_separated_tokens__WEBPACK_IMPORTED_MODULE_2__.stringify)(value)\n    }\n  } else {\n    return String(value)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvYXR0cmlidXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLDRDQUE0QztBQUN6RDtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsMkJBQTJCO0FBQ3hDO0FBQ0EsYUFBYSxxQ0FBcUM7QUFDbEQsYUFBYSx1Q0FBdUM7QUFDcEQ7O0FBRTBEO0FBQ3ZCO0FBQ007QUFDTzs7QUFFaEQ7QUFDQSxXQUFXLGNBQWM7QUFDekI7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsZUFBZSwwREFBSTtBQUNuQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsMENBQU07QUFDUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUseURBQVk7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsOEJBQThCO0FBQ3pDLFdBQVcsTUFBTTtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0Esb0NBQW9DLDZEQUFNLEdBQUcsNkRBQWdCO0FBQzdEO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ppcmEtY2xvbmUvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvYXR0cmlidXRlLmpzPzRlNzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdjc3Mtc2VsZWN0b3ItcGFyc2VyJykuQXN0QXR0cmlidXRlfSBBc3RBdHRyaWJ1dGVcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlByb3BlcnRpZXN9IFByb3BlcnRpZXNcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdwcm9wZXJ0eS1pbmZvcm1hdGlvbicpLkluZm99IEluZm9cbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3Byb3BlcnR5LWluZm9ybWF0aW9uJykuU2NoZW1hfSBTY2hlbWFcbiAqL1xuXG5pbXBvcnQge3N0cmluZ2lmeSBhcyBjb21tYXN9IGZyb20gJ2NvbW1hLXNlcGFyYXRlZC10b2tlbnMnXG5pbXBvcnQge29rIGFzIGFzc2VydH0gZnJvbSAnZGV2bG9wJ1xuaW1wb3J0IHtmaW5kfSBmcm9tICdwcm9wZXJ0eS1pbmZvcm1hdGlvbidcbmltcG9ydCAqIGFzIHNwYWNlcyBmcm9tICdzcGFjZS1zZXBhcmF0ZWQtdG9rZW5zJ1xuXG4vKipcbiAqIEBwYXJhbSB7QXN0QXR0cmlidXRlfSBxdWVyeVxuICogICBRdWVyeS5cbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogICBFbGVtZW50LlxuICogQHBhcmFtIHtTY2hlbWF9IHNjaGVtYVxuICogICBTY2hlbWEgb2YgZWxlbWVudC5cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogICBXaGV0aGVyIGBlbGVtZW50YCBtYXRjaGVzIGBxdWVyeWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhdHRyaWJ1dGUocXVlcnksIGVsZW1lbnQsIHNjaGVtYSkge1xuICBjb25zdCBpbmZvID0gZmluZChzY2hlbWEsIHF1ZXJ5Lm5hbWUpXG4gIGNvbnN0IHByb3BlcnR5VmFsdWUgPSBlbGVtZW50LnByb3BlcnRpZXNbaW5mby5wcm9wZXJ0eV1cbiAgbGV0IHZhbHVlID0gbm9ybWFsaXplVmFsdWUocHJvcGVydHlWYWx1ZSwgaW5mbylcblxuICAvLyBFeGlzdHMuXG4gIGlmICghcXVlcnkudmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZFxuICB9XG5cbiAgYXNzZXJ0KHF1ZXJ5LnZhbHVlLnR5cGUgPT09ICdTdHJpbmcnLCAnZXhwZWN0ZWQgcGxhaW4gc3RyaW5nJylcbiAgbGV0IGtleSA9IHF1ZXJ5LnZhbHVlLnZhbHVlXG5cbiAgLy8gQ2FzZS1zZW5zaXRpdml0eS5cbiAgaWYgKHF1ZXJ5LmNhc2VTZW5zaXRpdml0eU1vZGlmaWVyID09PSAnaScpIHtcbiAgICBrZXkgPSBrZXkudG9Mb3dlckNhc2UoKVxuXG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnRvTG93ZXJDYXNlKClcbiAgICB9XG4gIH1cblxuICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgIHN3aXRjaCAocXVlcnkub3BlcmF0b3IpIHtcbiAgICAgIC8vIEV4YWN0LlxuICAgICAgY2FzZSAnPSc6IHtcbiAgICAgICAgcmV0dXJuIGtleSA9PT0gdmFsdWVcbiAgICAgIH1cblxuICAgICAgLy8gRW5kcy5cbiAgICAgIGNhc2UgJyQ9Jzoge1xuICAgICAgICByZXR1cm4ga2V5ID09PSB2YWx1ZS5zbGljZSgta2V5Lmxlbmd0aClcbiAgICAgIH1cblxuICAgICAgLy8gQ29udGFpbnMuXG4gICAgICBjYXNlICcqPSc6IHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLmluY2x1ZGVzKGtleSlcbiAgICAgIH1cblxuICAgICAgLy8gQmVnaW5zLlxuICAgICAgY2FzZSAnXj0nOiB7XG4gICAgICAgIHJldHVybiBrZXkgPT09IHZhbHVlLnNsaWNlKDAsIGtleS5sZW5ndGgpXG4gICAgICB9XG5cbiAgICAgIC8vIEV4YWN0IG9yIHByZWZpeC5cbiAgICAgIGNhc2UgJ3w9Jzoge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIGtleSA9PT0gdmFsdWUgfHxcbiAgICAgICAgICAoa2V5ID09PSB2YWx1ZS5zbGljZSgwLCBrZXkubGVuZ3RoKSAmJlxuICAgICAgICAgICAgdmFsdWUuY2hhckF0KGtleS5sZW5ndGgpID09PSAnLScpXG4gICAgICAgIClcbiAgICAgIH1cblxuICAgICAgLy8gU3BhY2Utc2VwYXJhdGVkIGxpc3QuXG4gICAgICBjYXNlICd+PSc6IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAvLyBGb3IgYWxsIG90aGVyIHZhbHVlcyAoaW5jbHVkaW5nIGNvbW1hLXNlcGFyYXRlZCBsaXN0cyksIHJldHVybiB3aGV0aGVyIHRoaXNcbiAgICAgICAgICAvLyBpcyBhbiBleGFjdCBtYXRjaC5cbiAgICAgICAgICBrZXkgPT09IHZhbHVlIHx8XG4gICAgICAgICAgLy8gSWYgdGhpcyBpcyBhIHNwYWNlLXNlcGFyYXRlZCBsaXN0LCBhbmQgdGhlIHF1ZXJ5IGlzIGNvbnRhaW5lZCBpbiBpdCwgcmV0dXJuXG4gICAgICAgICAgLy8gdHJ1ZS5cbiAgICAgICAgICBzcGFjZXMucGFyc2UodmFsdWUpLmluY2x1ZGVzKGtleSlcbiAgICAgICAgKVxuICAgICAgfVxuICAgICAgLy8gT3RoZXIgdmFsdWVzIGFyZSBub3QgeWV0IHN1cHBvcnRlZCBieSBDU1MuXG4gICAgICAvLyBObyBkZWZhdWx0XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlXG59XG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7UHJvcGVydGllc1trZXlvZiBQcm9wZXJ0aWVzXX0gdmFsdWVcbiAqIEBwYXJhbSB7SW5mb30gaW5mb1xuICogQHJldHVybnMge3N0cmluZyB8IHVuZGVmaW5lZH1cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplVmFsdWUodmFsdWUsIGluZm8pIHtcbiAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAvLyBFbXB0eS5cbiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJykge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIGluZm8uYXR0cmlidXRlXG4gICAgfVxuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgaWYgKHZhbHVlLmxlbmd0aCA+IDApIHtcbiAgICAgIHJldHVybiAoaW5mby5jb21tYVNlcGFyYXRlZCA/IGNvbW1hcyA6IHNwYWNlcy5zdHJpbmdpZnkpKHZhbHVlKVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gU3RyaW5nKHZhbHVlKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/attribute.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/class-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/hast-util-select/lib/class-name.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   className: () => (/* binding */ className)\n/* harmony export */ });\n/**\n * @typedef {import('css-selector-parser').AstClassName} AstClassName\n * @typedef {import('hast').Element} Element\n */\n\n/** @type {Array<never>} */\nconst emptyClassNames = []\n\n/**\n * Check whether an element has all class names.\n *\n * @param {AstClassName} query\n *   AST rule (with `classNames`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction className(query, element) {\n  // Assume array.\n  const value = /** @type {Readonly<Array<string>>} */ (\n    element.properties.className || emptyClassNames\n  )\n\n  return value.includes(query.name)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvY2xhc3MtbmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLDRDQUE0QztBQUN6RCxhQUFhLHdCQUF3QjtBQUNyQzs7QUFFQSxXQUFXLGNBQWM7QUFDekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMkJBQTJCLHlCQUF5QjtBQUNwRDtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qaXJhLWNsb25lLy4vbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC1zZWxlY3QvbGliL2NsYXNzLW5hbWUuanM/MzcxNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2Nzcy1zZWxlY3Rvci1wYXJzZXInKS5Bc3RDbGFzc05hbWV9IEFzdENsYXNzTmFtZVxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqL1xuXG4vKiogQHR5cGUge0FycmF5PG5ldmVyPn0gKi9cbmNvbnN0IGVtcHR5Q2xhc3NOYW1lcyA9IFtdXG5cbi8qKlxuICogQ2hlY2sgd2hldGhlciBhbiBlbGVtZW50IGhhcyBhbGwgY2xhc3MgbmFtZXMuXG4gKlxuICogQHBhcmFtIHtBc3RDbGFzc05hbWV9IHF1ZXJ5XG4gKiAgIEFTVCBydWxlICh3aXRoIGBjbGFzc05hbWVzYCkuXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqICAgRWxlbWVudC5cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogICBXaGV0aGVyIGBlbGVtZW50YCBtYXRjaGVzIGBxdWVyeWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFzc05hbWUocXVlcnksIGVsZW1lbnQpIHtcbiAgLy8gQXNzdW1lIGFycmF5LlxuICBjb25zdCB2YWx1ZSA9IC8qKiBAdHlwZSB7UmVhZG9ubHk8QXJyYXk8c3RyaW5nPj59ICovIChcbiAgICBlbGVtZW50LnByb3BlcnRpZXMuY2xhc3NOYW1lIHx8IGVtcHR5Q2xhc3NOYW1lc1xuICApXG5cbiAgcmV0dXJuIHZhbHVlLmluY2x1ZGVzKHF1ZXJ5Lm5hbWUpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/class-name.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/enter-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/hast-util-select/lib/enter-state.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enterState: () => (/* binding */ enterState)\n/* harmony export */ });\n/* harmony import */ var direction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! direction */ \"(ssr)/./node_modules/direction/index.js\");\n/* harmony import */ var hast_util_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hast-util-to-string */ \"(ssr)/./node_modules/hast-util-to-string/lib/index.js\");\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-visit */ \"(ssr)/./node_modules/unist-util-visit/lib/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! unist-util-visit */ \"(ssr)/./node_modules/unist-util-visit-parents/lib/index.js\");\n/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n *\n * @typedef {import('unist-util-visit').Visitor<ElementContent>} Visitor\n *\n * @typedef {import('./index.js').Direction} Direction\n * @typedef {import('./index.js').State} State\n */\n\n\n\n\n\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {State} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Nodes} node\n *   Node to enter.\n * @returns {() => undefined}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nfunction enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let dirInferred\n\n  if (node.type === 'element') {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== null && lang !== undefined) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = property_information__WEBPACK_IMPORTED_MODULE_0__.svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi((0,hast_util_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          dirInferred = node.properties.value\n            ? dirBidi(String(node.properties.value))\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_2__.visit)(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  /**\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? unist_util_visit__WEBPACK_IMPORTED_MODULE_3__.EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        dirProperty(child))\n    ) {\n      return unist_util_visit__WEBPACK_IMPORTED_MODULE_3__.SKIP\n    }\n  }\n}\n\n/**\n * See `wooorm/direction`.\n *\n * @param {string} value\n *   Value to check.\n * @returns {Exclude<Direction, 'auto'> | undefined}\n *   Directionality.\n */\nfunction dirBidi(value) {\n  const result = (0,direction__WEBPACK_IMPORTED_MODULE_4__.direction)(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementContent} node\n *   Node to check.\n * @returns {Direction | undefined}\n *   Directionality.\n */\nfunction dirProperty(node) {\n  const value =\n    node.type === 'element' && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvZW50ZXItc3RhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLHNCQUFzQjtBQUNuQztBQUNBLGFBQWEsb0RBQW9EO0FBQ2pFO0FBQ0EsYUFBYSxnQ0FBZ0M7QUFDN0MsYUFBYSw0QkFBNEI7QUFDekM7O0FBRW1DO0FBQ1M7QUFDSjtBQUNVOztBQUVsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1QkFBdUI7QUFDcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUJBQXVCLHFEQUFHO0FBQzFCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsZ0NBQWdDLDZEQUFRO0FBQ3hDLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVUsdURBQUs7QUFDZjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsa0RBQUk7QUFDL0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrREFBSTtBQUNqQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvREFBUztBQUMxQjtBQUNBOztBQUVBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qaXJhLWNsb25lLy4vbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC1zZWxlY3QvbGliL2VudGVyLXN0YXRlLmpzPzZkM2MiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudENvbnRlbnR9IEVsZW1lbnRDb250ZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuTm9kZXN9IE5vZGVzXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgndW5pc3QtdXRpbC12aXNpdCcpLlZpc2l0b3I8RWxlbWVudENvbnRlbnQ+fSBWaXNpdG9yXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbmRleC5qcycpLkRpcmVjdGlvbn0gRGlyZWN0aW9uXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2luZGV4LmpzJykuU3RhdGV9IFN0YXRlXG4gKi9cblxuaW1wb3J0IHtkaXJlY3Rpb259IGZyb20gJ2RpcmVjdGlvbidcbmltcG9ydCB7dG9TdHJpbmd9IGZyb20gJ2hhc3QtdXRpbC10by1zdHJpbmcnXG5pbXBvcnQge3N2Z30gZnJvbSAncHJvcGVydHktaW5mb3JtYXRpb24nXG5pbXBvcnQge0VYSVQsIFNLSVAsIHZpc2l0fSBmcm9tICd1bmlzdC11dGlsLXZpc2l0J1xuXG4vKipcbiAqIEVudGVyIGEgbm9kZS5cbiAqXG4gKiBUaGUgY2FsbGVyIGlzIHJlc3BvbnNpYmxlIGZvciBjYWxsaW5nIHRoZSByZXR1cm4gdmFsdWUgYGV4aXRgLlxuICpcbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIEN1cnJlbnQgc3RhdGUuXG4gKlxuICogICBXaWxsIGJlIG11dGF0ZWQ6IGBleGl0YCB1bmRvcyB0aGUgY2hhbmdlcy5cbiAqIEBwYXJhbSB7Tm9kZXN9IG5vZGVcbiAqICAgTm9kZSB0byBlbnRlci5cbiAqIEByZXR1cm5zIHsoKSA9PiB1bmRlZmluZWR9XG4gKiAgIENhbGwgdG8gZXhpdC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbmV4cG9ydCBmdW5jdGlvbiBlbnRlclN0YXRlKHN0YXRlLCBub2RlKSB7XG4gIGNvbnN0IHNjaGVtYSA9IHN0YXRlLnNjaGVtYVxuICBjb25zdCBsYW5ndWFnZSA9IHN0YXRlLmxhbmd1YWdlXG4gIGNvbnN0IGN1cnJlbnREaXJlY3Rpb24gPSBzdGF0ZS5kaXJlY3Rpb25cbiAgY29uc3QgZWRpdGFibGVPckVkaXRpbmdIb3N0ID0gc3RhdGUuZWRpdGFibGVPckVkaXRpbmdIb3N0XG4gIC8qKiBAdHlwZSB7RGlyZWN0aW9uIHwgdW5kZWZpbmVkfSAqL1xuICBsZXQgZGlySW5mZXJyZWRcblxuICBpZiAobm9kZS50eXBlID09PSAnZWxlbWVudCcpIHtcbiAgICBjb25zdCBsYW5nID0gbm9kZS5wcm9wZXJ0aWVzLnhtbExhbmcgfHwgbm9kZS5wcm9wZXJ0aWVzLmxhbmdcbiAgICBjb25zdCB0eXBlID0gbm9kZS5wcm9wZXJ0aWVzLnR5cGUgfHwgJ3RleHQnXG4gICAgY29uc3QgZGlyID0gZGlyUHJvcGVydHkobm9kZSlcblxuICAgIGlmIChsYW5nICE9PSBudWxsICYmIGxhbmcgIT09IHVuZGVmaW5lZCkge1xuICAgICAgc3RhdGUubGFuZ3VhZ2UgPSBTdHJpbmcobGFuZylcbiAgICB9XG5cbiAgICBpZiAoc2NoZW1hICYmIHNjaGVtYS5zcGFjZSA9PT0gJ2h0bWwnKSB7XG4gICAgICBpZiAobm9kZS5wcm9wZXJ0aWVzLmNvbnRlbnRFZGl0YWJsZSA9PT0gJ3RydWUnKSB7XG4gICAgICAgIHN0YXRlLmVkaXRhYmxlT3JFZGl0aW5nSG9zdCA9IHRydWVcbiAgICAgIH1cblxuICAgICAgaWYgKG5vZGUudGFnTmFtZSA9PT0gJ3N2ZycpIHtcbiAgICAgICAgc3RhdGUuc2NoZW1hID0gc3ZnXG4gICAgICB9XG5cbiAgICAgIC8vIFNlZTogPGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI3RoZS1kaXJlY3Rpb25hbGl0eT4uXG4gICAgICAvLyBFeHBsaWNpdCBgW2Rpcj1ydGxdYC5cbiAgICAgIGlmIChkaXIgPT09ICdydGwnKSB7XG4gICAgICAgIGRpckluZmVycmVkID0gZGlyXG4gICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAvLyBFeHBsaWNpdCBgW2Rpcj1sdHJdYC5cbiAgICAgICAgZGlyID09PSAnbHRyJyB8fFxuICAgICAgICAvLyBIVE1MIHdpdGggYW4gaW52YWxpZCBvciBubyBgW2Rpcl1gLlxuICAgICAgICAoZGlyICE9PSAnYXV0bycgJiYgbm9kZS50YWdOYW1lID09PSAnaHRtbCcpIHx8XG4gICAgICAgIC8vIGBpbnB1dFt0eXBlPXRlbF1gIHdpdGggYW4gaW52YWxpZCBvciBubyBgW2Rpcl1gLlxuICAgICAgICAoZGlyICE9PSAnYXV0bycgJiYgbm9kZS50YWdOYW1lID09PSAnaW5wdXQnICYmIHR5cGUgPT09ICd0ZWwnKVxuICAgICAgKSB7XG4gICAgICAgIGRpckluZmVycmVkID0gJ2x0cidcbiAgICAgICAgLy8gYFtkaXI9YXV0b11gIG9yIGBiZGlgIHdpdGggYW4gaW52YWxpZCBvciBubyBgW2Rpcl1gLlxuICAgICAgfSBlbHNlIGlmIChkaXIgPT09ICdhdXRvJyB8fCBub2RlLnRhZ05hbWUgPT09ICdiZGknKSB7XG4gICAgICAgIGlmIChub2RlLnRhZ05hbWUgPT09ICd0ZXh0YXJlYScpIHtcbiAgICAgICAgICAvLyBDaGVjayBjb250ZW50cyBvZiBgPHRleHRhcmVhPmAuXG4gICAgICAgICAgZGlySW5mZXJyZWQgPSBkaXJCaWRpKHRvU3RyaW5nKG5vZGUpKVxuICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgIG5vZGUudGFnTmFtZSA9PT0gJ2lucHV0JyAmJlxuICAgICAgICAgICh0eXBlID09PSAnZW1haWwnIHx8XG4gICAgICAgICAgICB0eXBlID09PSAnc2VhcmNoJyB8fFxuICAgICAgICAgICAgdHlwZSA9PT0gJ3RlbCcgfHxcbiAgICAgICAgICAgIHR5cGUgPT09ICd0ZXh0JylcbiAgICAgICAgKSB7XG4gICAgICAgICAgLy8gQ2hlY2sgdmFsdWUgb2YgYDxpbnB1dD5gLlxuICAgICAgICAgIGRpckluZmVycmVkID0gbm9kZS5wcm9wZXJ0aWVzLnZhbHVlXG4gICAgICAgICAgICA/IGRpckJpZGkoU3RyaW5nKG5vZGUucHJvcGVydGllcy52YWx1ZSkpXG4gICAgICAgICAgICA6ICdsdHInXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gQ2hlY2sgdGV4dCBub2RlcyBpbiBgbm9kZWAuXG4gICAgICAgICAgdmlzaXQobm9kZSwgaW5mZXJEaXJlY3Rpb25hbGl0eSlcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZGlySW5mZXJyZWQpIHtcbiAgICAgICAgc3RhdGUuZGlyZWN0aW9uID0gZGlySW5mZXJyZWRcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gVHVybiBvZmYgZWRpdGluZyBtb2RlIGluIG5vbi1IVE1MIHNwYWNlcy5cbiAgICBlbHNlIGlmIChzdGF0ZS5lZGl0YWJsZU9yRWRpdGluZ0hvc3QpIHtcbiAgICAgIHN0YXRlLmVkaXRhYmxlT3JFZGl0aW5nSG9zdCA9IGZhbHNlXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc2V0XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gICAqICAgTm90aGluZy5cbiAgICovXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIHN0YXRlLnNjaGVtYSA9IHNjaGVtYVxuICAgIHN0YXRlLmxhbmd1YWdlID0gbGFuZ3VhZ2VcbiAgICBzdGF0ZS5kaXJlY3Rpb24gPSBjdXJyZW50RGlyZWN0aW9uXG4gICAgc3RhdGUuZWRpdGFibGVPckVkaXRpbmdIb3N0ID0gZWRpdGFibGVPckVkaXRpbmdIb3N0XG4gIH1cblxuICAvKiogQHR5cGUge1Zpc2l0b3J9ICovXG4gIGZ1bmN0aW9uIGluZmVyRGlyZWN0aW9uYWxpdHkoY2hpbGQpIHtcbiAgICBpZiAoY2hpbGQudHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgICBkaXJJbmZlcnJlZCA9IGRpckJpZGkoY2hpbGQudmFsdWUpXG4gICAgICByZXR1cm4gZGlySW5mZXJyZWQgPyBFWElUIDogdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgY2hpbGQgIT09IG5vZGUgJiZcbiAgICAgIGNoaWxkLnR5cGUgPT09ICdlbGVtZW50JyAmJlxuICAgICAgKGNoaWxkLnRhZ05hbWUgPT09ICdiZGknIHx8XG4gICAgICAgIGNoaWxkLnRhZ05hbWUgPT09ICdzY3JpcHQnIHx8XG4gICAgICAgIGNoaWxkLnRhZ05hbWUgPT09ICdzdHlsZScgfHxcbiAgICAgICAgY2hpbGQudGFnTmFtZSA9PT0gJ3RleHRhcmUnIHx8XG4gICAgICAgIGRpclByb3BlcnR5KGNoaWxkKSlcbiAgICApIHtcbiAgICAgIHJldHVybiBTS0lQXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogU2VlIGB3b29vcm0vZGlyZWN0aW9uYC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcbiAqICAgVmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7RXhjbHVkZTxEaXJlY3Rpb24sICdhdXRvJz4gfCB1bmRlZmluZWR9XG4gKiAgIERpcmVjdGlvbmFsaXR5LlxuICovXG5mdW5jdGlvbiBkaXJCaWRpKHZhbHVlKSB7XG4gIGNvbnN0IHJlc3VsdCA9IGRpcmVjdGlvbih2YWx1ZSlcbiAgcmV0dXJuIHJlc3VsdCA9PT0gJ25ldXRyYWwnID8gdW5kZWZpbmVkIDogcmVzdWx0XG59XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50Q29udGVudH0gbm9kZVxuICogICBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMge0RpcmVjdGlvbiB8IHVuZGVmaW5lZH1cbiAqICAgRGlyZWN0aW9uYWxpdHkuXG4gKi9cbmZ1bmN0aW9uIGRpclByb3BlcnR5KG5vZGUpIHtcbiAgY29uc3QgdmFsdWUgPVxuICAgIG5vZGUudHlwZSA9PT0gJ2VsZW1lbnQnICYmIHR5cGVvZiBub2RlLnByb3BlcnRpZXMuZGlyID09PSAnc3RyaW5nJ1xuICAgICAgPyBub2RlLnByb3BlcnRpZXMuZGlyLnRvTG93ZXJDYXNlKClcbiAgICAgIDogdW5kZWZpbmVkXG5cbiAgcmV0dXJuIHZhbHVlID09PSAnYXV0bycgfHwgdmFsdWUgPT09ICdsdHInIHx8IHZhbHVlID09PSAncnRsJ1xuICAgID8gdmFsdWVcbiAgICA6IHVuZGVmaW5lZFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/enter-state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/id.js":
/*!*************************************************!*\
  !*** ./node_modules/hast-util-select/lib/id.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   id: () => (/* binding */ id)\n/* harmony export */ });\n/**\n * @typedef {import('css-selector-parser').AstId} AstId\n *\n * @typedef {import('hast').Element} Element\n */\n\n// Workaround to show references to above types in VS Code.\n''\n\n/**\n * Check whether an element has an ID.\n *\n * @param {AstId} query\n *   AST rule (with `ids`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction id(query, element) {\n  return element.properties.id === query.name\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvaWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsYUFBYSxxQ0FBcUM7QUFDbEQ7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamlyYS1jbG9uZS8uL25vZGVfbW9kdWxlcy9oYXN0LXV0aWwtc2VsZWN0L2xpYi9pZC5qcz9lNTdkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnY3NzLXNlbGVjdG9yLXBhcnNlcicpLkFzdElkfSBBc3RJZFxuICpcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5FbGVtZW50fSBFbGVtZW50XG4gKi9cblxuLy8gV29ya2Fyb3VuZCB0byBzaG93IHJlZmVyZW5jZXMgdG8gYWJvdmUgdHlwZXMgaW4gVlMgQ29kZS5cbicnXG5cbi8qKlxuICogQ2hlY2sgd2hldGhlciBhbiBlbGVtZW50IGhhcyBhbiBJRC5cbiAqXG4gKiBAcGFyYW0ge0FzdElkfSBxdWVyeVxuICogICBBU1QgcnVsZSAod2l0aCBgaWRzYCkuXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqICAgRWxlbWVudC5cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogICBXaGV0aGVyIGBlbGVtZW50YCBtYXRjaGVzIGBxdWVyeWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpZChxdWVyeSwgZWxlbWVudCkge1xuICByZXR1cm4gZWxlbWVudC5wcm9wZXJ0aWVzLmlkID09PSBxdWVyeS5uYW1lXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/id.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/hast-util-select/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matches: () => (/* binding */ matches),\n/* harmony export */   select: () => (/* binding */ select),\n/* harmony export */   selectAll: () => (/* binding */ selectAll)\n/* harmony export */ });\n/* harmony import */ var property_information__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! property-information */ \"(ssr)/./node_modules/property-information/index.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ \"(ssr)/./node_modules/hast-util-select/lib/parse.js\");\n/* harmony import */ var _walk_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./walk.js */ \"(ssr)/./node_modules/hast-util-select/lib/walk.js\");\n/**\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {'html' | 'svg'} Space\n *   Name of namespace.\n *\n * @typedef {'auto' | 'ltr' | 'rtl'} Direction\n *   Direction.\n *\n * @typedef State\n *   Current state.\n * @property {Direction} direction\n *   Current direction.\n * @property {boolean} editableOrEditingHost\n *   Whether we’re in `contentEditable`.\n * @property {number | undefined} elementCount\n *   Track siblings: there are `n` siblings.\n * @property {number | undefined} elementIndex\n *   Track siblings: this current element has `n` elements before it.\n * @property {boolean} found\n *   Whether we found at least one match.\n * @property {string | undefined} language\n *   Current language.\n * @property {boolean} one\n *   Whether we can stop looking after we found one element.\n * @property {Array<Element>} results\n *   Matches.\n * @property {AstSelector} rootQuery\n *   Original root selectors.\n * @property {Schema} schema\n *   Current schema.\n * @property {Array<RootContent>} scopeElements\n *   Elements in scope.\n * @property {boolean} shallow\n *   Whether we only allow selectors without nesting.\n * @property {number | undefined} typeCount\n *   Track siblings: there are `n` siblings with this element’s tag name.\n * @property {number | undefined} typeIndex\n *   Track siblings: this current element has `n` elements with its tag name\n *   before it.\n */\n\n\n\n\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [node]\n *   Node that might match `selector`, should be an element (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nfunction matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  ;(0,_walk_js__WEBPACK_IMPORTED_MODULE_0__.walk)(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Element | undefined}\n *   First element in `tree` that matches `selector` or `undefined` if nothing\n *   is found; this could be `tree` itself.\n */\nfunction select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  ;(0,_walk_js__WEBPACK_IMPORTED_MODULE_0__.walk)(state, tree || undefined)\n  return state.results[0]\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nfunction selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  ;(0,_walk_js__WEBPACK_IMPORTED_MODULE_0__.walk)(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {State} State\n *   State.\n */\nfunction createState(selector, tree, space) {\n  return {\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    elementCount: undefined,\n    elementIndex: undefined,\n    found: false,\n    language: undefined,\n    one: false,\n    // State of the query.\n    results: [],\n    rootQuery: (0,_parse_js__WEBPACK_IMPORTED_MODULE_1__.parse)(selector),\n    schema: space === 'svg' ? property_information__WEBPACK_IMPORTED_MODULE_2__.svg : property_information__WEBPACK_IMPORTED_MODULE_2__.html,\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    shallow: false,\n    typeIndex: undefined,\n    typeCount: undefined\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSxhQUFhLDJDQUEyQztBQUN4RDtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsNEJBQTRCO0FBQ3pDO0FBQ0EsYUFBYSx1Q0FBdUM7QUFDcEQ7O0FBRUE7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFdBQVc7QUFDekI7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQSxjQUFjLG9CQUFvQjtBQUNsQztBQUNBLGNBQWMsb0JBQW9CO0FBQ2xDO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0EsY0FBYyxvQkFBb0I7QUFDbEM7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQSxjQUFjLGdCQUFnQjtBQUM5QjtBQUNBLGNBQWMsYUFBYTtBQUMzQjtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLGNBQWMsb0JBQW9CO0FBQ2xDO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0EsY0FBYyxvQkFBb0I7QUFDbEM7QUFDQSxjQUFjLG9CQUFvQjtBQUNsQztBQUNBO0FBQ0E7O0FBRThDO0FBQ2Q7QUFDRjs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ0EsV0FBVywwQkFBMEI7QUFDckM7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsRUFBRSwrQ0FBSTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxXQUFXLDBCQUEwQjtBQUNyQztBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsZUFBZTtBQUNmO0FBQ087QUFDUDtBQUNBO0FBQ0EsRUFBRSwrQ0FBSTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxXQUFXLDBCQUEwQjtBQUNyQztBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxFQUFFLCtDQUFJO0FBQ047QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ0EsV0FBVywwQkFBMEI7QUFDckM7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFLO0FBQ3BCLDhCQUE4QixxREFBRyxHQUFHLHNEQUFJO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ppcmEtY2xvbmUvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvaW5kZXguanM/OWFlOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2Nzcy1zZWxlY3Rvci1wYXJzZXInKS5Bc3RTZWxlY3Rvcn0gQXN0U2VsZWN0b3JcbiAqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdoYXN0JykuRWxlbWVudH0gRWxlbWVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLk5vZGVzfSBOb2Rlc1xuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLlJvb3RDb250ZW50fSBSb290Q29udGVudFxuICpcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3Byb3BlcnR5LWluZm9ybWF0aW9uJykuU2NoZW1hfSBTY2hlbWFcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHsnaHRtbCcgfCAnc3ZnJ30gU3BhY2VcbiAqICAgTmFtZSBvZiBuYW1lc3BhY2UuXG4gKlxuICogQHR5cGVkZWYgeydhdXRvJyB8ICdsdHInIHwgJ3J0bCd9IERpcmVjdGlvblxuICogICBEaXJlY3Rpb24uXG4gKlxuICogQHR5cGVkZWYgU3RhdGVcbiAqICAgQ3VycmVudCBzdGF0ZS5cbiAqIEBwcm9wZXJ0eSB7RGlyZWN0aW9ufSBkaXJlY3Rpb25cbiAqICAgQ3VycmVudCBkaXJlY3Rpb24uXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IGVkaXRhYmxlT3JFZGl0aW5nSG9zdFxuICogICBXaGV0aGVyIHdl4oCZcmUgaW4gYGNvbnRlbnRFZGl0YWJsZWAuXG4gKiBAcHJvcGVydHkge251bWJlciB8IHVuZGVmaW5lZH0gZWxlbWVudENvdW50XG4gKiAgIFRyYWNrIHNpYmxpbmdzOiB0aGVyZSBhcmUgYG5gIHNpYmxpbmdzLlxuICogQHByb3BlcnR5IHtudW1iZXIgfCB1bmRlZmluZWR9IGVsZW1lbnRJbmRleFxuICogICBUcmFjayBzaWJsaW5nczogdGhpcyBjdXJyZW50IGVsZW1lbnQgaGFzIGBuYCBlbGVtZW50cyBiZWZvcmUgaXQuXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IGZvdW5kXG4gKiAgIFdoZXRoZXIgd2UgZm91bmQgYXQgbGVhc3Qgb25lIG1hdGNoLlxuICogQHByb3BlcnR5IHtzdHJpbmcgfCB1bmRlZmluZWR9IGxhbmd1YWdlXG4gKiAgIEN1cnJlbnQgbGFuZ3VhZ2UuXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IG9uZVxuICogICBXaGV0aGVyIHdlIGNhbiBzdG9wIGxvb2tpbmcgYWZ0ZXIgd2UgZm91bmQgb25lIGVsZW1lbnQuXG4gKiBAcHJvcGVydHkge0FycmF5PEVsZW1lbnQ+fSByZXN1bHRzXG4gKiAgIE1hdGNoZXMuXG4gKiBAcHJvcGVydHkge0FzdFNlbGVjdG9yfSByb290UXVlcnlcbiAqICAgT3JpZ2luYWwgcm9vdCBzZWxlY3RvcnMuXG4gKiBAcHJvcGVydHkge1NjaGVtYX0gc2NoZW1hXG4gKiAgIEN1cnJlbnQgc2NoZW1hLlxuICogQHByb3BlcnR5IHtBcnJheTxSb290Q29udGVudD59IHNjb3BlRWxlbWVudHNcbiAqICAgRWxlbWVudHMgaW4gc2NvcGUuXG4gKiBAcHJvcGVydHkge2Jvb2xlYW59IHNoYWxsb3dcbiAqICAgV2hldGhlciB3ZSBvbmx5IGFsbG93IHNlbGVjdG9ycyB3aXRob3V0IG5lc3RpbmcuXG4gKiBAcHJvcGVydHkge251bWJlciB8IHVuZGVmaW5lZH0gdHlwZUNvdW50XG4gKiAgIFRyYWNrIHNpYmxpbmdzOiB0aGVyZSBhcmUgYG5gIHNpYmxpbmdzIHdpdGggdGhpcyBlbGVtZW504oCZcyB0YWcgbmFtZS5cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyIHwgdW5kZWZpbmVkfSB0eXBlSW5kZXhcbiAqICAgVHJhY2sgc2libGluZ3M6IHRoaXMgY3VycmVudCBlbGVtZW50IGhhcyBgbmAgZWxlbWVudHMgd2l0aCBpdHMgdGFnIG5hbWVcbiAqICAgYmVmb3JlIGl0LlxuICovXG5cbmltcG9ydCB7aHRtbCwgc3ZnfSBmcm9tICdwcm9wZXJ0eS1pbmZvcm1hdGlvbidcbmltcG9ydCB7cGFyc2V9IGZyb20gJy4vcGFyc2UuanMnXG5pbXBvcnQge3dhbGt9IGZyb20gJy4vd2Fsay5qcydcblxuLyoqXG4gKiBDaGVjayB0aGF0IHRoZSBnaXZlbiBgbm9kZWAgbWF0Y2hlcyBgc2VsZWN0b3JgLlxuICpcbiAqIFRoaXMgb25seSBjaGVja3MgdGhlIGVsZW1lbnQgaXRzZWxmLCBub3QgdGhlIHN1cnJvdW5kaW5nIHRyZWUuXG4gKiBUaHVzLCBuZXN0aW5nIGluIHNlbGVjdG9ycyBpcyBub3Qgc3VwcG9ydGVkIChgcCBiYCwgYHAgPiBiYCksIG5laXRoZXIgYXJlXG4gKiBzZWxlY3RvcnMgbGlrZSBgOmZpcnN0LWNoaWxkYCwgZXRjLlxuICogVGhpcyBvbmx5IGNoZWNrcyB0aGF0IHRoZSBnaXZlbiBlbGVtZW50IG1hdGNoZXMgdGhlIHNlbGVjdG9yLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvclxuICogICBDU1Mgc2VsZWN0b3IsIHN1Y2ggYXMgKGBoMWAsIGBhLCBiYCkuXG4gKiBAcGFyYW0ge05vZGVzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW25vZGVdXG4gKiAgIE5vZGUgdGhhdCBtaWdodCBtYXRjaCBgc2VsZWN0b3JgLCBzaG91bGQgYmUgYW4gZWxlbWVudCAob3B0aW9uYWwpLlxuICogQHBhcmFtIHtTcGFjZSB8IG51bGwgfCB1bmRlZmluZWR9IFtzcGFjZT0naHRtbCddXG4gKiAgIE5hbWUgb2YgbmFtZXNwYWNlIChkZWZhdWx0OiBgJ2h0bWwnYCkuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqICAgV2hldGhlciBgbm9kZWAgbWF0Y2hlcyBgc2VsZWN0b3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWF0Y2hlcyhzZWxlY3Rvciwgbm9kZSwgc3BhY2UpIHtcbiAgY29uc3Qgc3RhdGUgPSBjcmVhdGVTdGF0ZShzZWxlY3Rvciwgbm9kZSwgc3BhY2UpXG4gIHN0YXRlLm9uZSA9IHRydWVcbiAgc3RhdGUuc2hhbGxvdyA9IHRydWVcbiAgd2FsayhzdGF0ZSwgbm9kZSB8fCB1bmRlZmluZWQpXG4gIHJldHVybiBzdGF0ZS5yZXN1bHRzLmxlbmd0aCA+IDBcbn1cblxuLyoqXG4gKiBTZWxlY3QgdGhlIGZpcnN0IGVsZW1lbnQgdGhhdCBtYXRjaGVzIGBzZWxlY3RvcmAgaW4gdGhlIGdpdmVuIGB0cmVlYC5cbiAqIFNlYXJjaGVzIHRoZSB0cmVlIGluICpwcmVvcmRlciouXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yXG4gKiAgIENTUyBzZWxlY3Rvciwgc3VjaCBhcyAoYGgxYCwgYGEsIGJgKS5cbiAqIEBwYXJhbSB7Tm9kZXMgfCBudWxsIHwgdW5kZWZpbmVkfSBbdHJlZV1cbiAqICAgVHJlZSB0byBzZWFyY2ggKG9wdGlvbmFsKS5cbiAqIEBwYXJhbSB7U3BhY2UgfCBudWxsIHwgdW5kZWZpbmVkfSBbc3BhY2U9J2h0bWwnXVxuICogICBOYW1lIG9mIG5hbWVzcGFjZSAoZGVmYXVsdDogYCdodG1sJ2ApLlxuICogQHJldHVybnMge0VsZW1lbnQgfCB1bmRlZmluZWR9XG4gKiAgIEZpcnN0IGVsZW1lbnQgaW4gYHRyZWVgIHRoYXQgbWF0Y2hlcyBgc2VsZWN0b3JgIG9yIGB1bmRlZmluZWRgIGlmIG5vdGhpbmdcbiAqICAgaXMgZm91bmQ7IHRoaXMgY291bGQgYmUgYHRyZWVgIGl0c2VsZi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdChzZWxlY3RvciwgdHJlZSwgc3BhY2UpIHtcbiAgY29uc3Qgc3RhdGUgPSBjcmVhdGVTdGF0ZShzZWxlY3RvciwgdHJlZSwgc3BhY2UpXG4gIHN0YXRlLm9uZSA9IHRydWVcbiAgd2FsayhzdGF0ZSwgdHJlZSB8fCB1bmRlZmluZWQpXG4gIHJldHVybiBzdGF0ZS5yZXN1bHRzWzBdXG59XG5cbi8qKlxuICogU2VsZWN0IGFsbCBlbGVtZW50cyB0aGF0IG1hdGNoIGBzZWxlY3RvcmAgaW4gdGhlIGdpdmVuIGB0cmVlYC5cbiAqIFNlYXJjaGVzIHRoZSB0cmVlIGluICpwcmVvcmRlciouXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yXG4gKiAgIENTUyBzZWxlY3Rvciwgc3VjaCBhcyAoYGgxYCwgYGEsIGJgKS5cbiAqIEBwYXJhbSB7Tm9kZXMgfCBudWxsIHwgdW5kZWZpbmVkfSBbdHJlZV1cbiAqICAgVHJlZSB0byBzZWFyY2ggKG9wdGlvbmFsKS5cbiAqIEBwYXJhbSB7U3BhY2UgfCBudWxsIHwgdW5kZWZpbmVkfSBbc3BhY2U9J2h0bWwnXVxuICogICBOYW1lIG9mIG5hbWVzcGFjZSAoZGVmYXVsdDogYCdodG1sJ2ApLlxuICogQHJldHVybnMge0FycmF5PEVsZW1lbnQ+fVxuICogICBFbGVtZW50cyBpbiBgdHJlZWAgdGhhdCBtYXRjaCBgc2VsZWN0b3JgLlxuICogICBUaGlzIGNvdWxkIGluY2x1ZGUgYHRyZWVgIGl0c2VsZi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdEFsbChzZWxlY3RvciwgdHJlZSwgc3BhY2UpIHtcbiAgY29uc3Qgc3RhdGUgPSBjcmVhdGVTdGF0ZShzZWxlY3RvciwgdHJlZSwgc3BhY2UpXG4gIHdhbGsoc3RhdGUsIHRyZWUgfHwgdW5kZWZpbmVkKVxuICByZXR1cm4gc3RhdGUucmVzdWx0c1xufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvclxuICogICBDU1Mgc2VsZWN0b3IsIHN1Y2ggYXMgKGBoMWAsIGBhLCBiYCkuXG4gKiBAcGFyYW0ge05vZGVzIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3RyZWVdXG4gKiAgIFRyZWUgdG8gc2VhcmNoIChvcHRpb25hbCkuXG4gKiBAcGFyYW0ge1NwYWNlIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3NwYWNlPSdodG1sJ11cbiAqICAgTmFtZSBvZiBuYW1lc3BhY2UgKGRlZmF1bHQ6IGAnaHRtbCdgKS5cbiAqIEByZXR1cm5zIHtTdGF0ZX0gU3RhdGVcbiAqICAgU3RhdGUuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVN0YXRlKHNlbGVjdG9yLCB0cmVlLCBzcGFjZSkge1xuICByZXR1cm4ge1xuICAgIGRpcmVjdGlvbjogJ2x0cicsXG4gICAgZWRpdGFibGVPckVkaXRpbmdIb3N0OiBmYWxzZSxcbiAgICBlbGVtZW50Q291bnQ6IHVuZGVmaW5lZCxcbiAgICBlbGVtZW50SW5kZXg6IHVuZGVmaW5lZCxcbiAgICBmb3VuZDogZmFsc2UsXG4gICAgbGFuZ3VhZ2U6IHVuZGVmaW5lZCxcbiAgICBvbmU6IGZhbHNlLFxuICAgIC8vIFN0YXRlIG9mIHRoZSBxdWVyeS5cbiAgICByZXN1bHRzOiBbXSxcbiAgICByb290UXVlcnk6IHBhcnNlKHNlbGVjdG9yKSxcbiAgICBzY2hlbWE6IHNwYWNlID09PSAnc3ZnJyA/IHN2ZyA6IGh0bWwsXG4gICAgc2NvcGVFbGVtZW50czogdHJlZSA/ICh0cmVlLnR5cGUgPT09ICdyb290JyA/IHRyZWUuY2hpbGRyZW4gOiBbdHJlZV0pIDogW10sXG4gICAgc2hhbGxvdzogZmFsc2UsXG4gICAgdHlwZUluZGV4OiB1bmRlZmluZWQsXG4gICAgdHlwZUNvdW50OiB1bmRlZmluZWRcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/name.js":
/*!***************************************************!*\
  !*** ./node_modules/hast-util-select/lib/name.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/**\n * @typedef {import('css-selector-parser').AstTagName} AstTagName\n *\n * @typedef {import('hast').Element} Element\n */\n\n// Workaround to show references to above types in VS Code.\n''\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {AstTagName} query\n *   AST rule (with `tag`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction name(query, element) {\n  return query.name === element.tagName\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvbmFtZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLDBDQUEwQztBQUN2RDtBQUNBLGFBQWEsd0JBQXdCO0FBQ3JDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qaXJhLWNsb25lLy4vbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC1zZWxlY3QvbGliL25hbWUuanM/ZGE2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2Nzcy1zZWxlY3Rvci1wYXJzZXInKS5Bc3RUYWdOYW1lfSBBc3RUYWdOYW1lXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqL1xuXG4vLyBXb3JrYXJvdW5kIHRvIHNob3cgcmVmZXJlbmNlcyB0byBhYm92ZSB0eXBlcyBpbiBWUyBDb2RlLlxuJydcblxuLyoqXG4gKiBDaGVjayB3aGV0aGVyIGFuIGVsZW1lbnQgaGFzIGEgdGFnIG5hbWUuXG4gKlxuICogQHBhcmFtIHtBc3RUYWdOYW1lfSBxdWVyeVxuICogICBBU1QgcnVsZSAod2l0aCBgdGFnYCkuXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqICAgRWxlbWVudC5cbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogICBXaGV0aGVyIGBlbGVtZW50YCBtYXRjaGVzIGBxdWVyeWAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBuYW1lKHF1ZXJ5LCBlbGVtZW50KSB7XG4gIHJldHVybiBxdWVyeS5uYW1lID09PSBlbGVtZW50LnRhZ05hbWVcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/name.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/parse.js":
/*!****************************************************!*\
  !*** ./node_modules/hast-util-select/lib/parse.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var css_selector_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! css-selector-parser */ \"(ssr)/./node_modules/css-selector-parser/dist/mjs/index.js\");\n/**\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\n */\n\n\n\nconst cssSelectorParse = (0,css_selector_parser__WEBPACK_IMPORTED_MODULE_0__.createParser)({syntax: 'selectors-4'})\n\n/**\n * @param {string} selector\n *   Selector to parse.\n * @returns {AstSelector}\n *   Parsed selector.\n */\nfunction parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return cssSelectorParse(selector)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvcGFyc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsMkNBQTJDO0FBQ3hEOztBQUVnRDs7QUFFaEQseUJBQXlCLGlFQUFZLEVBQUUsc0JBQXNCOztBQUU3RDtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ppcmEtY2xvbmUvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvcGFyc2UuanM/YWFjNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2Nzcy1zZWxlY3Rvci1wYXJzZXInKS5Bc3RTZWxlY3Rvcn0gQXN0U2VsZWN0b3JcbiAqL1xuXG5pbXBvcnQge2NyZWF0ZVBhcnNlcn0gZnJvbSAnY3NzLXNlbGVjdG9yLXBhcnNlcidcblxuY29uc3QgY3NzU2VsZWN0b3JQYXJzZSA9IGNyZWF0ZVBhcnNlcih7c3ludGF4OiAnc2VsZWN0b3JzLTQnfSlcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3JcbiAqICAgU2VsZWN0b3IgdG8gcGFyc2UuXG4gKiBAcmV0dXJucyB7QXN0U2VsZWN0b3J9XG4gKiAgIFBhcnNlZCBzZWxlY3Rvci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlKHNlbGVjdG9yKSB7XG4gIGlmICh0eXBlb2Ygc2VsZWN0b3IgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYHN0cmluZ2AgYXMgc2VsZWN0b3IsIG5vdCBgJyArIHNlbGVjdG9yICsgJ2AnKVxuICB9XG5cbiAgcmV0dXJuIGNzc1NlbGVjdG9yUGFyc2Uoc2VsZWN0b3IpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/pseudo.js":
/*!*****************************************************!*\
  !*** ./node_modules/hast-util-select/lib/pseudo.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pseudo: () => (/* binding */ pseudo)\n/* harmony export */ });\n/* harmony import */ var bcp_47_match__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! bcp-47-match */ \"(ssr)/./node_modules/bcp-47-match/index.js\");\n/* harmony import */ var comma_separated_tokens__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! comma-separated-tokens */ \"(ssr)/./node_modules/comma-separated-tokens/index.js\");\n/* harmony import */ var devlop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! devlop */ \"(ssr)/./node_modules/devlop/lib/development.js\");\n/* harmony import */ var hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hast-util-has-property */ \"(ssr)/./node_modules/hast-util-has-property/lib/index.js\");\n/* harmony import */ var hast_util_whitespace__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hast-util-whitespace */ \"(ssr)/./node_modules/hast-util-whitespace/lib/index.js\");\n/* harmony import */ var nth_check__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nth-check */ \"(ssr)/./node_modules/nth-check/lib/esm/index.js\");\n/* harmony import */ var zwitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zwitch */ \"(ssr)/./node_modules/zwitch/index.js\");\n/* harmony import */ var _walk_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./walk.js */ \"(ssr)/./node_modules/hast-util-select/lib/walk.js\");\n/**\n * @typedef {import('css-selector-parser').AstPseudoClass} AstPseudoClass\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\n\n\n\n\n\n\n\n\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error: types are broken.\nconst nthCheck = nth_check__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"default\"] || nth_check__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n\n/** @type {(rule: AstPseudoClass, element: Element, index: number | undefined, parent: Parents | undefined, state: State) => boolean} */\nconst pseudo = (0,zwitch__WEBPACK_IMPORTED_MODULE_1__.zwitch)('name', {\n  handlers: {\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    is,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-last-of-type': nthLastOfType,\n    'nth-of-type': nthOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  },\n  invalid: invalidPseudo,\n  unknown: unknownPseudo\n})\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, 'href')\n  )\n}\n\n/**\n * @param {State} state\n *   State.\n * @param {AstPseudoClass} query\n *   Query.\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !(0,hast_util_whitespace__WEBPACK_IMPORTED_MODULE_3__.whitespace)(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      (element.properties.type === 'checkbox' ||\n        element.properties.type === 'radio') &&\n        (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction dir(query, _1, _2, _3, state) {\n  (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument, 'expected `argument`')\n  ;(0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument.type === 'String', 'expected plain text')\n  return state.direction === query.argument.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @returns {(value: number) => boolean}\n *   N.\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let fn = query._cachedFn\n\n  if (!fn) {\n    const value = query.argument\n    ;(0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(value, 'expected `argument`')\n\n    if (value.type !== 'Formula') {\n      throw new Error(\n        'Expected `nth` formula, such as `even` or `2n+1` (`of` is not yet supported)'\n      )\n    }\n\n    fn = nthCheck(value.a + 'n+' + value.b)\n    // @ts-expect-error: cache.\n    query._cachedFn = fn\n  }\n\n  return fn\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction has(query, element, _1, _2, state) {\n  (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument, 'expected `argument`')\n  ;(0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  ;(0,_walk_js__WEBPACK_IMPORTED_MODULE_5__.walk)(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  (0,devlop__WEBPACK_IMPORTED_MODULE_4__.unreachable)('Invalid pseudo-selector')\n}\n\n/**\n * Check whether an element `:is` further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction is(query, element, _1, _2, state) {\n  (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument, 'expected `argument`')\n  ;(0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  ;(0,_walk_js__WEBPACK_IMPORTED_MODULE_5__.walk)(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lang(query, _1, _2, _3, state) {\n  (0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument, 'expected `argument`')\n  ;(0,devlop__WEBPACK_IMPORTED_MODULE_4__.ok)(query.argument.type === 'String', 'expected string')\n\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    (0,bcp_47_match__WEBPACK_IMPORTED_MODULE_6__.extendedFilter)(state.language, (0,comma_separated_tokens__WEBPACK_IMPORTED_MODULE_7__.parse)(query.argument.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction not(query, element, index, parent, state) {\n  return !is(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.elementIndex === 'number' && fn(state.elementIndex)\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      fn(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    fn(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !(0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, 'readOnly') && !(0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    (0,hast_util_has_property__WEBPACK_IMPORTED_MODULE_2__.hasProperty)(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction root(_1, element, _2, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction scope(_1, element, _2, _3, state) {\n  return state.scopeElements.includes(element)\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n *   Element.\n * @param {(child: ElementContent) => boolean} check\n *   Check.\n * @returns {boolean}\n *   Whether a child of `element` matches `check`.\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {unknown} query_\n *   Query-like value.\n * @returns {never}\n *   Nothing.\n * @throws\n *   Exception.\n */\nfunction unknownPseudo(query_) {\n  // Runtime JS guarantees it has a `name`.\n  const query = /** @type {AstPseudoClass} */ (query_)\n  throw new Error('Unknown pseudo-selector `' + query.name + '`')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/pseudo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/test.js":
/*!***************************************************!*\
  !*** ./node_modules/hast-util-select/lib/test.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   test: () => (/* binding */ test)\n/* harmony export */ });\n/* harmony import */ var _attribute_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attribute.js */ \"(ssr)/./node_modules/hast-util-select/lib/attribute.js\");\n/* harmony import */ var _class_name_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./class-name.js */ \"(ssr)/./node_modules/hast-util-select/lib/class-name.js\");\n/* harmony import */ var _id_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./id.js */ \"(ssr)/./node_modules/hast-util-select/lib/id.js\");\n/* harmony import */ var _name_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./name.js */ \"(ssr)/./node_modules/hast-util-select/lib/name.js\");\n/* harmony import */ var _pseudo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pseudo.js */ \"(ssr)/./node_modules/hast-util-select/lib/pseudo.js\");\n/**\n * @typedef {import('css-selector-parser').AstRule} AstRule\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\n\n\n\n\n\n\n/**\n * Test a rule.\n *\n * @param {AstRule} query\n *   AST rule (with `pseudoClasses`).\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction test(query, element, index, parent, state) {\n  for (const item of query.items) {\n    // eslint-disable-next-line unicorn/prefer-switch\n    if (item.type === 'Attribute') {\n      if (!(0,_attribute_js__WEBPACK_IMPORTED_MODULE_0__.attribute)(item, element, state.schema)) return false\n    } else if (item.type === 'Id') {\n      if (!(0,_id_js__WEBPACK_IMPORTED_MODULE_1__.id)(item, element)) return false\n    } else if (item.type === 'ClassName') {\n      if (!(0,_class_name_js__WEBPACK_IMPORTED_MODULE_2__.className)(item, element)) return false\n    } else if (item.type === 'PseudoClass') {\n      if (!(0,_pseudo_js__WEBPACK_IMPORTED_MODULE_3__.pseudo)(item, element, index, parent, state)) return false\n    } else if (item.type === 'PseudoElement') {\n      throw new Error('Invalid selector: `::' + item.name + '`')\n    } else if (item.type === 'TagName') {\n      if (!(0,_name_js__WEBPACK_IMPORTED_MODULE_4__.name)(item, element)) return false\n    } else {\n      // Otherwise `item.type` is `WildcardTag`, which matches.\n    }\n  }\n\n  return true\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaGFzdC11dGlsLXNlbGVjdC9saWIvdGVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBLGFBQWEsdUNBQXVDO0FBQ3BEO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSx3QkFBd0I7QUFDckM7QUFDQSxhQUFhLDRCQUE0QjtBQUN6Qzs7QUFFd0M7QUFDQztBQUNmO0FBQ0k7QUFDSTs7QUFFbEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0EsV0FBVyxvQkFBb0I7QUFDL0I7QUFDQSxXQUFXLHFCQUFxQjtBQUNoQztBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdEQUFTO0FBQ3BCLE1BQU07QUFDTixXQUFXLDBDQUFFO0FBQ2IsTUFBTTtBQUNOLFdBQVcseURBQVM7QUFDcEIsTUFBTTtBQUNOLFdBQVcsa0RBQU07QUFDakIsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOLFdBQVcsOENBQUk7QUFDZixNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qaXJhLWNsb25lLy4vbm9kZV9tb2R1bGVzL2hhc3QtdXRpbC1zZWxlY3QvbGliL3Rlc3QuanM/Y2RkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2Nzcy1zZWxlY3Rvci1wYXJzZXInKS5Bc3RSdWxlfSBBc3RSdWxlXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaGFzdCcpLkVsZW1lbnR9IEVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2hhc3QnKS5QYXJlbnRzfSBQYXJlbnRzXG4gKlxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbmRleC5qcycpLlN0YXRlfSBTdGF0ZVxuICovXG5cbmltcG9ydCB7YXR0cmlidXRlfSBmcm9tICcuL2F0dHJpYnV0ZS5qcydcbmltcG9ydCB7Y2xhc3NOYW1lfSBmcm9tICcuL2NsYXNzLW5hbWUuanMnXG5pbXBvcnQge2lkfSBmcm9tICcuL2lkLmpzJ1xuaW1wb3J0IHtuYW1lfSBmcm9tICcuL25hbWUuanMnXG5pbXBvcnQge3BzZXVkb30gZnJvbSAnLi9wc2V1ZG8uanMnXG5cbi8qKlxuICogVGVzdCBhIHJ1bGUuXG4gKlxuICogQHBhcmFtIHtBc3RSdWxlfSBxdWVyeVxuICogICBBU1QgcnVsZSAod2l0aCBgcHNldWRvQ2xhc3Nlc2ApLlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gKiAgIEVsZW1lbnQuXG4gKiBAcGFyYW0ge251bWJlciB8IHVuZGVmaW5lZH0gaW5kZXhcbiAqICAgSW5kZXggb2YgYGVsZW1lbnRgIGluIGBwYXJlbnRgLlxuICogQHBhcmFtIHtQYXJlbnRzIHwgdW5kZWZpbmVkfSBwYXJlbnRcbiAqICAgUGFyZW50IG9mIGBlbGVtZW50YC5cbiAqIEBwYXJhbSB7U3RhdGV9IHN0YXRlXG4gKiAgIFN0YXRlLlxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKiAgIFdoZXRoZXIgYGVsZW1lbnRgIG1hdGNoZXMgYHF1ZXJ5YC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRlc3QocXVlcnksIGVsZW1lbnQsIGluZGV4LCBwYXJlbnQsIHN0YXRlKSB7XG4gIGZvciAoY29uc3QgaXRlbSBvZiBxdWVyeS5pdGVtcykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB1bmljb3JuL3ByZWZlci1zd2l0Y2hcbiAgICBpZiAoaXRlbS50eXBlID09PSAnQXR0cmlidXRlJykge1xuICAgICAgaWYgKCFhdHRyaWJ1dGUoaXRlbSwgZWxlbWVudCwgc3RhdGUuc2NoZW1hKSkgcmV0dXJuIGZhbHNlXG4gICAgfSBlbHNlIGlmIChpdGVtLnR5cGUgPT09ICdJZCcpIHtcbiAgICAgIGlmICghaWQoaXRlbSwgZWxlbWVudCkpIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSBpZiAoaXRlbS50eXBlID09PSAnQ2xhc3NOYW1lJykge1xuICAgICAgaWYgKCFjbGFzc05hbWUoaXRlbSwgZWxlbWVudCkpIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSBpZiAoaXRlbS50eXBlID09PSAnUHNldWRvQ2xhc3MnKSB7XG4gICAgICBpZiAoIXBzZXVkbyhpdGVtLCBlbGVtZW50LCBpbmRleCwgcGFyZW50LCBzdGF0ZSkpIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSBpZiAoaXRlbS50eXBlID09PSAnUHNldWRvRWxlbWVudCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBzZWxlY3RvcjogYDo6JyArIGl0ZW0ubmFtZSArICdgJylcbiAgICB9IGVsc2UgaWYgKGl0ZW0udHlwZSA9PT0gJ1RhZ05hbWUnKSB7XG4gICAgICBpZiAoIW5hbWUoaXRlbSwgZWxlbWVudCkpIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBPdGhlcndpc2UgYGl0ZW0udHlwZWAgaXMgYFdpbGRjYXJkVGFnYCwgd2hpY2ggbWF0Y2hlcy5cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/test.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/hast-util-select/lib/walk.js":
/*!***************************************************!*\
  !*** ./node_modules/hast-util-select/lib/walk.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   walk: () => (/* binding */ walk)\n/* harmony export */ });\n/* harmony import */ var _enter_state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enter-state.js */ \"(ssr)/./node_modules/hast-util-select/lib/enter-state.js\");\n/* harmony import */ var _test_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./test.js */ \"(ssr)/./node_modules/hast-util-select/lib/test.js\");\n/**\n * @typedef {import('css-selector-parser').AstRule} AstRule\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\n/**\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<AstRule> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<AstRule> | undefined} descendant\n *   `a b`\n * @property {Array<AstRule> | undefined} directChild\n *   `a > b`\n * @property {Array<AstRule> | undefined} generalSibling\n *   `a ~ b`\n */\n\n\n\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Walk a tree.\n *\n * @param {State} state\n *   State.\n * @param {Nodes | undefined} tree\n *   Tree.\n */\nfunction walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined, tree)\n  }\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n *   Nesting.\n * @param {keyof Nest} field\n *   Field.\n * @param {AstRule} rule\n *   Rule.\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Check in a parent.\n *\n * @param {State} state\n *   State.\n * @param {Nest} nest\n *   Nesting.\n * @param {Parents} node\n *   Parent.\n * @param {Nodes} tree\n *   Tree.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(state, nest, node, tree) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<AstRule> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(\n        state,\n        forSibling,\n        node.children[index],\n        index,\n        node,\n        tree\n      )\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {State} state\n *   Current state.\n * @param {Array<AstRule>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const rule = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && rule.nestedRule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if ((0,_test_js__WEBPACK_IMPORTED_MODULE_0__.test)(rule, node, index, parent, state)) {\n      const nest = rule.nestedRule\n\n      // Are there more?\n      if (nest) {\n        /** @type {keyof Nest} */\n        const label =\n          nest.combinator === '+'\n            ? 'adjacentSibling'\n            : nest.combinator === '~'\n            ? 'generalSibling'\n            : nest.combinator === '>'\n            ? 'directChild'\n            : 'descendant'\n        add(nestResult, label, nest)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (rule.combinator === undefined) {\n      add(nestResult, 'descendant', rule)\n    }\n    // Adjacent.\n    else if (rule.combinator === '~') {\n      add(nestResult, 'generalSibling', rule)\n    }\n    // Drop direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<AstRule> | undefined} left\n *   Rules.\n * @param {Array<AstRule> | undefined} right\n *   Rules.\n * @returns {Array<AstRule>}\n *   Rules.\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n    ? left\n    : right && right.length > 0\n    ? right\n    : empty\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Nodes} node\n *   Node (we’re looking for elements).\n * @returns {undefined}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {State} state\n *   State.\n * @param {Array<AstRule>} currentRules\n *   Rules.\n * @param {Nodes} node\n *   Node.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {Nodes} tree\n *   Tree.\n * @returns {Nest}\n *   Nesting.\n */\nfunction one(state, currentRules, node, index, parent, tree) {\n  /** @type {Nest} */\n  let nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n\n  const exit = (0,_enter_state_js__WEBPACK_IMPORTED_MODULE_1__.enterState)(state, node)\n\n  if (node.type === 'element') {\n    let rootRules = state.rootQuery.rules\n\n    // Remove direct child rules if this is the root.\n    // This only happens for a `:has()` rule, which can be like\n    // `a:has(> b)`.\n    if (parent && parent !== tree) {\n      rootRules = state.rootQuery.rules.filter(\n        (d) =>\n          d.combinator === undefined ||\n          (d.combinator === '>' && parent === tree)\n      )\n    }\n\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, rootRules),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node, tree)\n  }\n\n  exit()\n\n  return nestResult\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hast-util-select/lib/walk.js\n");

/***/ })

};
;